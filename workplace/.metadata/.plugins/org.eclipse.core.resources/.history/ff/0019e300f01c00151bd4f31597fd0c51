package org.spring.prac;

import javax.annotation.PostConstruct;
import javax.annotation.PreDestroy;
import javax.annotation.Resource;

import org.springframework.beans.BeansException;
import org.springframework.context.ApplicationContext;
import org.springframework.context.ApplicationContextAware;
import org.springframework.stereotype.Component;

@Component
public class Shape implements ApplicationContextAware{
	
	Point p1,p2;
	ApplicationContext context;
		
	public Point getP1() {
		return p1;
	}
	
	@Resource
	public void setP1(Point p1) {
		this.p1 = p1;
	}

	public Point getP2() {
		return p2;
	}
	
	@Resource
	public void setP2(Point p2) {
		this.p2 = p2;
	}

	@PostConstruct	//annotation for declaring below method as the method to call after construction of the bean.
	public void init(){
		System.out.println("Bean initialization init() method.");
		
	}
	
	@PreDestroy	//annotation for declaring below method as the method to call before destroy of the bean.
	public void end(){
		System.out.println("Bean Desposabile destroying here.");
		
	}
	
	
	
	public void draw(){
		System.out.println(context.getMessage("shape.name", null, "message overboard", null));
		System.out.println(context.getMessage("shape.inx", null, "message overboard", null));
		System.out.println(context.getMessage("shape.inx", new Object[] {"p1",p1.getX(),p1.getY()}, "message overboard", null));
	}

	@Override
	public void setApplicationContext(ApplicationContext arg0)
			throws BeansException {
		this.context = arg0;
		
	}

	
}
